apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: wol
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: wol
  template:
    metadata:
      labels:
        app: wol
    spec:
      hostPID: true
      hostNetwork: true
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      containers:
      - name: wol
        image: alpine:3.20
        securityContext:
          privileged: true
        command: ["/bin/sh", "-c"]
        args:
        - |
          apk add --no-cache ethtool iputils >/dev/null 2>&1
          TARGETS="ip1 ip2"
          MACS="mac1 mac2"
          IFACE=$(ip route show default 0.0.0.0/0 | head -n1 | awk '{print $5}')
          [ -z "$IFACE" ] && IFACE=$(ip link show | awk -F': ' '/^[0-9]+: e/{print $2; exit}')

          while true; do
            i=1
            for IP in $TARGETS; do
              MAC=$(echo $MACS | cut -d' ' -f$i)
              INT=$(echo $MACS | cut -d' ' -f$i)
              if ! ping -c 2 -W 2 $IP >/dev/null 2>&1; then
                ether-wake -i $IFACE $MAC
                sleep $((RANDOM % 30))
                echo "$(date) [$HOSTNAME] Host $IP offline. Sending WOL to $MAC via $BROADCAST..."
              fi
              i=$((i+1))
            done
            sleep 300
          done
